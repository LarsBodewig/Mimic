buildscript {
    group = "$groupId"
}

plugins {
    id 'eclipse'
    id 'java-gradle-plugin'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    mavenCentral()
    gradlePluginPortal()
}

processResources {
    def resourcesDir = sourceSets.main.output.resourcesDir
    resourcesDir.mkdirs()
    def contents = "$version"
    new File(resourcesDir, "mimic.version").text = contents
}

java {
    sourceCompatibility = JavaVersion.VERSION_19
    withJavadocJar()
    withSourcesJar()
}

gradlePlugin {
    plugins {
        mimic {
            id = 'dev.bodewig.mimic'
            tags.set(['reflection', 'codegen', 'java', 'wrapper'])
            implementationClass = 'dev.bodewig.mimic.gradle.plugin.MimicPlugin'
        }
    }
}

publishing.publications.withType(MavenPublication) { pub ->
    pom.withXml {
        def pom = asNode()
        def parent = pom.appendNode('parent')
        parent.appendNode('groupId', "$groupId")
        parent.appendNode('artifactId', 'mimic-parent')
        parent.appendNode('version', "$version")
        pom.remove(pom.get('groupId'))
        pom.remove(pom.get('version'))
        pom.appendNode('name', 'Mimic Gradle Plugin')
        pom.appendNode('description', 'Create reflective accessors for third party classes')
    }
}

dependencies {
    implementation "dev.bodewig.mimic:mimic-annotation-processor:$version"
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

eclipse.project.name = "$name"
